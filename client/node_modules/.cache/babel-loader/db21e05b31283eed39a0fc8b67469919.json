{"ast":null,"code":"var _jsxFileName = \"/home/kasawa/Desktop/Mine/reactjs/clothings/client/src/components/button/stripe-button.js\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { clearAllItems } from \"../../redux/cart/cart-actions\";\n\nconst StripeCheckoutButton = ({\n  price,\n  clearAllItems\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_WBqax2FWVzS9QlpJScO07iuL\";\n\n  const onToken = async token => {\n    // clearAllItems();\n    try {\n      await axios({\n        url: \"payment\",\n        method: \"post\",\n        data: {\n          amount: priceForStripe,\n          token\n        }\n      });\n      alert(\"Payment successful\");\n    } catch (error) {\n      alert(\"There was an issue with your payment. Please use the provided credit card\");\n      console.log(\"Payment error: \", error);\n    }\n  };\n\n  return React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"CRWN Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: \"Your total is $\".concat(price),\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearAllItems: () => dispatch(clearAllItems())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["/home/kasawa/Desktop/Mine/reactjs/clothings/client/src/components/button/stripe-button.js"],"names":["React","StripeCheckout","axios","connect","clearAllItems","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","alert","error","console","log","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,+BAA9B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAA8B;AACzD,QAAMG,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,kCAAvB;;AAEA,QAAMC,OAAO,GAAG,MAAMC,KAAN,IAAe;AAC7B;AACA,QAAI;AACF,YAAMR,KAAK,CAAC;AACVS,QAAAA,GAAG,EAAE,SADK;AAEVC,QAAAA,MAAM,EAAE,MAFE;AAGVC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAEP,cADJ;AAEJG,UAAAA;AAFI;AAHI,OAAD,CAAX;AASAK,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,KAXD,CAWE,OAAOC,KAAP,EAAc;AACdD,MAAAA,KAAK,CACH,2EADG,CAAL;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACD;AACF,GAnBD;;AAqBA,SACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,oBAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,gCALR;AAME,IAAA,WAAW,2BAAoBV,KAApB,CANb;AAOE,IAAA,MAAM,EAAEC,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE,OATT;AAUE,IAAA,SAAS,EAAED,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAvCD;;AAyCA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,aAAa,EAAE,MAAMgB,QAAQ,CAAChB,aAAa,EAAd;AADS,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CACpB,IADoB,EAEpBgB,kBAFoB,CAAP,CAGbd,oBAHa,CAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nimport { connect } from \"react-redux\";\nimport { clearAllItems } from \"../../redux/cart/cart-actions\";\n\nconst StripeCheckoutButton = ({ price, clearAllItems }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_WBqax2FWVzS9QlpJScO07iuL\";\n\n  const onToken = async token => {\n    // clearAllItems();\n    try {\n      await axios({\n        url: \"payment\",\n        method: \"post\",\n        data: {\n          amount: priceForStripe,\n          token\n        }\n      });\n\n      alert(\"Payment successful\");\n    } catch (error) {\n      alert(\n        \"There was an issue with your payment. Please use the provided credit card\"\n      );\n      console.log(\"Payment error: \", error);\n    }\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      image=\"https://svgshare.com/i/CUz.svg\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearAllItems: () => dispatch(clearAllItems())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(StripeCheckoutButton);\n"]},"metadata":{},"sourceType":"module"}