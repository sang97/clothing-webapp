{"ast":null,"code":"var _jsxFileName = \"/home/kasawa/Desktop/Mine/reactjs/clothings/src/pages/shop-page.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../redux/shop/shop-actions\";\nimport WithSpinner from \"../components/spinner/with-spinner\";\nimport CollectionOverview from \"../components/shop/collection-overview\";\nimport CollectionPage from \"./collection-page\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../firebase/firebase-util\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/kasawa/Desktop/Mine/reactjs/clothings/src/pages/shop-page.js"],"names":["React","Route","connect","updateCollections","WithSpinner","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,2BAHP;;AAKA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVX,iBADU,GACY,KAAKY,KADjB,CACVZ,iBADU;AAElB,UAAMa,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAhB,MAAAA,iBAAiB,CAACiB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJ8B,CAA/B;AAKD;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKR,KADhB,CACCQ,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEnB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKkB,KAAK,CAACC,IAAX,mBADN;AAEE,MAAA,SAAS,EAAElB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AA7BoC;;AAgCvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,iBAAiB,EAAEiB,cAAc,IAC/BM,QAAQ,CAACvB,iBAAiB,CAACiB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAelB,OAAO,CACpB,IADoB,EAEpBuB,kBAFoB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../redux/shop/shop-actions\";\n\nimport WithSpinner from \"../components/spinner/with-spinner\";\n\nimport CollectionOverview from \"../components/shop/collection-overview\";\nimport CollectionPage from \"./collection-page\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../firebase/firebase-util\";\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  };\n\n  unsubscribeFromSnapShot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}