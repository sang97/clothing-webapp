{"ast":null,"code":"import _defineProperty from \"/home/kasawa/Desktop/Mine/reactjs/clothings/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existing = cartItems.find(item => item.id === cartItemToAdd.id);\n\n  if (existing) {\n    return cartItems.map(item => item.id === cartItemToAdd.id ? _objectSpread({}, item, {\n      quantity: item.quantity + 1\n    }) : item);\n  } else {\n    return [...cartItems, _objectSpread({}, cartItemToAdd, {\n      quantity: 1\n    })];\n  }\n};","map":{"version":3,"sources":["/home/kasawa/Desktop/Mine/reactjs/clothings/src/redux/cart/cart-utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existing","find","item","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,QAAQ,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAAjD,CAAjB;;AAEA,MAAIH,QAAJ,EAAc;AACZ,WAAOF,SAAS,CAACM,GAAV,CAAcF,IAAI,IACvBA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAA1B,qBACSD,IADT;AACeG,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AADzC,SAEIH,IAHC,CAAP;AAKD,GAND,MAMO;AACL,WAAO,CAAC,GAAGJ,SAAJ,oBAAoBC,aAApB;AAAmCM,MAAAA,QAAQ,EAAE;AAA7C,OAAP;AACD;AACF,CAZM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existing = cartItems.find(item => item.id === cartItemToAdd.id);\n\n  if (existing) {\n    return cartItems.map(item =>\n      item.id === cartItemToAdd.id\n        ? { ...item, quantity: item.quantity + 1 }\n        : item\n    );\n  } else {\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n  }\n};\n"]},"metadata":{},"sourceType":"module"}