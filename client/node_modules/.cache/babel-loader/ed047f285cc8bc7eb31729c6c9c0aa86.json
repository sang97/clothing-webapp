{"ast":null,"code":"import _defineProperty from \"/home/kasawa/Desktop/Mine/reactjs/clothings/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CartActionTypes } from './cart-types';\nconst initialState = {\n  hidden: true\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/kasawa/Desktop/Mine/reactjs/clothings/src/redux/cart/cart-reducer.js"],"names":["CartActionTypes","initialState","hidden","cartReducer","state","action","type","TOGGLE_CART_HIDDEN"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAe,CAACO,kBAArB;AACI,+BACOH,KADP;AAEIF,QAAAA,MAAM,EAAE,CAACE,KAAK,CAACF;AAFnB;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from './cart-types';\n\nconst initialState = {\n    hidden: true\n}\n\nconst cartReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            }\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}