{"ast":null,"code":"var _jsxFileName = \"/home/kasawa/Desktop/Mine/reactjs/clothings/src/pages/shop-page.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../redux/shop/shop-actions\";\nimport CollectionOverview from \"../components/shop/collection-overview\";\nimport CollectionPage from \"./collection-page\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../firebase/firebase-util\";\nimport withSpinner from \"../components/spinner/with-spinner\";\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapShot();\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/kasawa/Desktop/Mine/reactjs/clothings/src/pages/shop-page.js"],"names":["React","Route","connect","updateCollections","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","withSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,2BAHP;AAIA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACJ,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVb,iBADU,GACY,KAAKc,KADjB,CACVd,iBADU;AAElB,UAAMe,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACAlB,MAAAA,iBAAiB,CAACmB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJ8B,CAA/B;AAKD;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,SAAKT,uBAAL;AACD;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKT,KADhB,CACCS,KADD;AAAA,UAECZ,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEV,KAAK,IACX,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEV,KAAK,IACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA1CoC;;AA6CvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtC1B,EAAAA,iBAAiB,EAAEmB,cAAc,IAC/BO,QAAQ,CAAC1B,iBAAiB,CAACmB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAepB,OAAO,CACpB,IADoB,EAEpB0B,kBAFoB,CAAP,CAGbjB,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../redux/shop/shop-actions\";\n\nimport CollectionOverview from \"../components/shop/collection-overview\";\nimport CollectionPage from \"./collection-page\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../firebase/firebase-util\";\nimport withSpinner from \"../components/spinner/with-spinner\";\n\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  };\n\n  unsubscribeFromSnapShot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapShot();\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionOverviewWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}